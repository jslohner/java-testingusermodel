memberSearchIndex = [{
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "RolesController",
    "l": "addNewRole(Role)",
    "url": "addNewRole(com.lambdaschool.usermodel.models.Role)"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "UserController",
    "l": "addNewUser(User)",
    "url": "addNewUser(com.lambdaschool.usermodel.models.User)"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "UseremailController",
    "l": "addNewUserEmail(long, String)",
    "url": "addNewUserEmail(long,java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "User",
    "l": "addRole(Role)",
    "url": "addRole(com.lambdaschool.usermodel.models.Role)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserService",
    "l": "addUserRole(long, long)",
    "url": "addUserRole(long,long)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserServiceImpl",
    "l": "addUserRole(long, long)",
    "url": "addUserRole(long,long)"
}, {
    "p": "com.lambdaschool.usermodel.config",
    "c": "Swagger2Config",
    "l": "api()"
}, {
    "p": "com.lambdaschool.usermodel.repository",
    "c": "UserRepository",
    "l": "checkUserRolesCombo(long, long)",
    "url": "checkUserRolesCombo(long,long)"
}, {
    "p": "com.lambdaschool.usermodel",
    "c": "UserModelApplicationTests",
    "l": "contextLoads()"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "RoleService",
    "l": "delete(long)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "RoleServiceImpl",
    "l": "delete(long)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserService",
    "l": "delete(long)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserServiceImpl",
    "l": "delete(long)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UseremailService",
    "l": "delete(long)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UseremailServiceImpl",
    "l": "delete(long)"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "RolesController",
    "l": "deleteRoleById(long)"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "UserController",
    "l": "deleteUserById(long)"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "UseremailController",
    "l": "deleteUserEmailById(long)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserService",
    "l": "deleteUserRole(long, long)",
    "url": "deleteUserRole(long,long)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserServiceImpl",
    "l": "deleteUserRole(long, long)",
    "url": "deleteUserRole(long,long)"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "UserController",
    "l": "deleteUserRoleByIds(long, long)",
    "url": "deleteUserRoleByIds(long,long)"
}, {
    "p": "com.lambdaschool.usermodel.repository",
    "c": "UserRepository",
    "l": "deleteUserRoles(long, long)",
    "url": "deleteUserRoles(long,long)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "UserRoles",
    "l": "equals(Object)",
    "url": "equals(java.lang.Object)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "RoleService",
    "l": "findAll()"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "RoleServiceImpl",
    "l": "findAll()"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserService",
    "l": "findAll()"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserServiceImpl",
    "l": "findAll()"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UseremailService",
    "l": "findAll()"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UseremailServiceImpl",
    "l": "findAll()"
}, {
    "p": "com.lambdaschool.usermodel.repository",
    "c": "UseremailRepository",
    "l": "findAllByUser_Username(String)",
    "url": "findAllByUser_Username(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "RoleService",
    "l": "findByName(String)",
    "url": "findByName(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "RoleServiceImpl",
    "l": "findByName(String)",
    "url": "findByName(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserService",
    "l": "findByName(String)",
    "url": "findByName(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserServiceImpl",
    "l": "findByName(String)",
    "url": "findByName(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserService",
    "l": "findByNameContaining(String)",
    "url": "findByNameContaining(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserServiceImpl",
    "l": "findByNameContaining(String)",
    "url": "findByNameContaining(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.repository",
    "c": "RoleRepository",
    "l": "findByNameIgnoreCase(String)",
    "url": "findByNameIgnoreCase(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.repository",
    "c": "UserRepository",
    "l": "findByUsername(String)",
    "url": "findByUsername(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UseremailService",
    "l": "findByUserName(String)",
    "url": "findByUserName(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UseremailServiceImpl",
    "l": "findByUserName(String)",
    "url": "findByUserName(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.repository",
    "c": "UserRepository",
    "l": "findByUsernameContainingIgnoreCase(String)",
    "url": "findByUsernameContainingIgnoreCase(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "RoleService",
    "l": "findRoleById(long)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "RoleServiceImpl",
    "l": "findRoleById(long)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserService",
    "l": "findUserById(long)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserServiceImpl",
    "l": "findUserById(long)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UseremailService",
    "l": "findUseremailById(long)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UseremailServiceImpl",
    "l": "findUseremailById(long)"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "UseremailController",
    "l": "findUseremailByUserName(String)",
    "url": "findUseremailByUserName(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.views",
    "c": "JustTheCount",
    "l": "getCount()"
}, {
    "p": "com.lambdaschool.usermodel.views",
    "c": "UserNameCountEmails",
    "l": "getCountemails()"
}, {
    "p": "com.lambdaschool.usermodel.repository",
    "c": "UserRepository",
    "l": "getCountUserEmails()"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserService",
    "l": "getCountUserEmails()"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserServiceImpl",
    "l": "getCountUserEmails()"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserAuditing",
    "l": "getCurrentAuditor()"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "Role",
    "l": "getName()"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "UserController",
    "l": "getNumUserEmails()"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "User",
    "l": "getPassword()"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "User",
    "l": "getPrimaryemail()"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "UserRoles",
    "l": "getRole()"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "RolesController",
    "l": "getRoleById(Long)",
    "url": "getRoleById(java.lang.Long)"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "RolesController",
    "l": "getRoleByName(String)",
    "url": "getRoleByName(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "Role",
    "l": "getRoleid()"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "User",
    "l": "getRoles()"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "UserRoles",
    "l": "getUser()"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "Useremail",
    "l": "getUser()"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "UserController",
    "l": "getUserById(Long)",
    "url": "getUserById(java.lang.Long)"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "UserController",
    "l": "getUserByName(String)",
    "url": "getUserByName(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "Useremail",
    "l": "getUseremail()"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "UseremailController",
    "l": "getUserEmailById(Long)",
    "url": "getUserEmailById(java.lang.Long)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "Useremail",
    "l": "getUseremailid()"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "User",
    "l": "getUseremails()"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "User",
    "l": "getUserid()"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "UserController",
    "l": "getUserLikeName(String)",
    "url": "getUserLikeName(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "User",
    "l": "getUsername()"
}, {
    "p": "com.lambdaschool.usermodel.views",
    "c": "UserNameCountEmails",
    "l": "getUsernamerpt()"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "Role",
    "l": "getUsers()"
}, {
    "p": "com.lambdaschool.usermodel.config",
    "c": "H2ServerConfiguration",
    "l": "H2ServerConfiguration()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.usermodel.config",
    "c": "H2ServerConfiguration",
    "l": "h2TcpServer()"
}, {
    "p": "com.lambdaschool.usermodel.config",
    "c": "H2ServerConfiguration",
    "l": "h2WebServer()"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "UserRoles",
    "l": "hashCode()"
}, {
    "p": "com.lambdaschool.usermodel.repository",
    "c": "UserRepository",
    "l": "insertUserRoles(String, long, long)",
    "url": "insertUserRoles(java.lang.String,long,long)"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "UseremailController",
    "l": "listAllUseremails()"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "UserController",
    "l": "listAllUsers()"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "RolesController",
    "l": "listRoles()"
}, {
    "p": "com.lambdaschool.usermodel",
    "c": "UserModelApplication",
    "l": "main(String[])",
    "url": "main(java.lang.String[])"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "RolesController",
    "l": "patchUpdateRole(long, Role)",
    "url": "patchUpdateRole(long,com.lambdaschool.usermodel.models.Role)"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "UserController",
    "l": "postUserRoleByIds(long, long)",
    "url": "postUserRoleByIds(long,long)"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "RolesController",
    "l": "putUpdateRole(long, Role)",
    "url": "putUpdateRole(long,com.lambdaschool.usermodel.models.Role)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "Role",
    "l": "Role()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "Role",
    "l": "Role(String)",
    "url": "%3Cinit%3E(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "RolesController",
    "l": "RolesController()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "RoleServiceImpl",
    "l": "RoleServiceImpl()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.usermodel",
    "c": "SeedData",
    "l": "run(String[])",
    "url": "run(java.lang.String[])"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UseremailService",
    "l": "save(long, String)",
    "url": "save(long,java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UseremailServiceImpl",
    "l": "save(long, String)",
    "url": "save(long,java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "RoleService",
    "l": "save(Role)",
    "url": "save(com.lambdaschool.usermodel.models.Role)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "RoleServiceImpl",
    "l": "save(Role)",
    "url": "save(com.lambdaschool.usermodel.models.Role)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserService",
    "l": "save(User)",
    "url": "save(com.lambdaschool.usermodel.models.User)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserServiceImpl",
    "l": "save(User)",
    "url": "save(com.lambdaschool.usermodel.models.User)"
}, {
    "p": "com.lambdaschool.usermodel",
    "c": "SeedData",
    "l": "SeedData()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "Role",
    "l": "setName(String)",
    "url": "setName(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "User",
    "l": "setPassword(String)",
    "url": "setPassword(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "User",
    "l": "setPrimaryemail(String)",
    "url": "setPrimaryemail(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "UserRoles",
    "l": "setRole(Role)",
    "url": "setRole(com.lambdaschool.usermodel.models.Role)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "Role",
    "l": "setRoleid(long)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "User",
    "l": "setRoles(List<UserRoles>)",
    "url": "setRoles(java.util.List)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "UserRoles",
    "l": "setUser(User)",
    "url": "setUser(com.lambdaschool.usermodel.models.User)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "Useremail",
    "l": "setUser(User)",
    "url": "setUser(com.lambdaschool.usermodel.models.User)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "Useremail",
    "l": "setUseremail(String)",
    "url": "setUseremail(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "Useremail",
    "l": "setUseremailid(long)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "User",
    "l": "setUseremails(List<Useremail>)",
    "url": "setUseremails(java.util.List)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "User",
    "l": "setUserid(long)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "User",
    "l": "setUsername(String)",
    "url": "setUsername(java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "Role",
    "l": "setUsers(List<UserRoles>)",
    "url": "setUsers(java.util.List)"
}, {
    "p": "com.lambdaschool.usermodel.config",
    "c": "Swagger2Config",
    "l": "Swagger2Config()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "RoleService",
    "l": "update(long, Role)",
    "url": "update(long,com.lambdaschool.usermodel.models.Role)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "RoleServiceImpl",
    "l": "update(long, Role)",
    "url": "update(long,com.lambdaschool.usermodel.models.Role)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UseremailService",
    "l": "update(long, String)",
    "url": "update(long,java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UseremailServiceImpl",
    "l": "update(long, String)",
    "url": "update(long,java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserService",
    "l": "update(User, long)",
    "url": "update(com.lambdaschool.usermodel.models.User,long)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserServiceImpl",
    "l": "update(User, long)",
    "url": "update(com.lambdaschool.usermodel.models.User,long)"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "UserController",
    "l": "updateFullUser(User, long)",
    "url": "updateFullUser(com.lambdaschool.usermodel.models.User,long)"
}, {
    "p": "com.lambdaschool.usermodel.repository",
    "c": "RoleRepository",
    "l": "updateRoleName(String, long, String)",
    "url": "updateRoleName(java.lang.String,long,java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "UserController",
    "l": "updateUser(User, long)",
    "url": "updateUser(com.lambdaschool.usermodel.models.User,long)"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "UseremailController",
    "l": "updateUserEmail(long, String)",
    "url": "updateUserEmail(long,java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "User",
    "l": "User()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "User",
    "l": "User(String, String, String, List<UserRoles>)",
    "url": "%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.util.List)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserAuditing",
    "l": "UserAuditing()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "UserController",
    "l": "UserController()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "Useremail",
    "l": "Useremail()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "Useremail",
    "l": "Useremail(User, String)",
    "url": "%3Cinit%3E(com.lambdaschool.usermodel.models.User,java.lang.String)"
}, {
    "p": "com.lambdaschool.usermodel.controllers",
    "c": "UseremailController",
    "l": "UseremailController()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UseremailServiceImpl",
    "l": "UseremailServiceImpl()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.usermodel",
    "c": "UserModelApplication",
    "l": "UserModelApplication()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.usermodel",
    "c": "UserModelApplicationTests",
    "l": "UserModelApplicationTests()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "UserRoles",
    "l": "UserRoles()",
    "url": "%3Cinit%3E()"
}, {
    "p": "com.lambdaschool.usermodel.models",
    "c": "UserRoles",
    "l": "UserRoles(User, Role)",
    "url": "%3Cinit%3E(com.lambdaschool.usermodel.models.User,com.lambdaschool.usermodel.models.Role)"
}, {
    "p": "com.lambdaschool.usermodel.services",
    "c": "UserServiceImpl",
    "l": "UserServiceImpl()",
    "url": "%3Cinit%3E()"
}]